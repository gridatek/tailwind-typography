.prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.prose :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 5);
  margin-bottom: calc(var(--spacing) * 5);
}

.prose
  :where([class~="lead"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  color: var(--tw-prose-lead);
  font-size: var(--text-xl);
  line-height: calc(var(--spacing) * 6);
  margin-top: calc(var(--spacing) * 4.8);
  margin-bottom: calc(var(--spacing) * 4.8);
}

.prose :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: var(--font-weight-medium);
}

.prose
  :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: var(--font-weight-semibold);
}

.prose
  :where(a strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: inherit;
}

.prose
  :where(blockquote strong):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  color: inherit;
}

.prose
  :where(thead th strong):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  color: inherit;
}

.prose :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: calc(var(--spacing) * 5);
  margin-bottom: calc(var(--spacing) * 5);
  padding-inline-start: calc(var(--spacing) * 6.5);
}

.prose
  :where(ol[type="A"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: upper-alpha;
}

.prose
  :where(ol[type="a"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: lower-alpha;
}

.prose
  :where(ol[type="A" s]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: upper-alpha;
}

.prose
  :where(ol[type="a" s]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: lower-alpha;
}

.prose
  :where(ol[type="I"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: upper-roman;
}

.prose
  :where(ol[type="i"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: lower-roman;
}

.prose
  :where(ol[type="I" s]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: upper-roman;
}

.prose
  :where(ol[type="i" s]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: lower-roman;
}

.prose
  :where(ol[type="1"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: calc(var(--spacing) * 5);
  margin-bottom: calc(var(--spacing) * 5);
  padding-inline-start: calc(var(--spacing) * 6.5);
}

.prose
  :where(ol > li):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::marker {
  font-weight: var(--font-weight-normal);
  color: var(--tw-prose-counters);
}

.prose
  :where(ul > li):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: var(--font-weight-semibold);
  margin-top: calc(var(--spacing) * 5);
}

.prose :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: calc(var(--spacing) * 12);
  margin-bottom: calc(var(--spacing) * 12);
}

.prose
  :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-weight: var(--font-weight-medium);
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-inline-start-width: var(--spacing);
  border-inline-start-color: var(--tw-prose-quote-borders);
  quotes: "\201C" "\201D" "\2018" "\2019";
  margin-top: calc(var(--spacing) * 6);
  margin-bottom: calc(var(--spacing) * 6);
  padding-inline-start: calc(var(--spacing) * 4);
}

.prose
  :where(blockquote p:first-of-type):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::before {
  content: open-quote;
}

.prose
  :where(blockquote p:last-of-type):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::after {
  content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: var(--font-weight-extrabold);
  font-size: var(--text-4xl);
  margin-top: 0;
  margin-bottom: calc(var(--spacing) * 4);
  line-height: var(--text-4xl--line-height);
}

.prose
  :where(h1 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-weight: var(--font-weight-black);
  color: inherit;
}

.prose :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: var(--font-weight-bold);
  font-size: var(--text-2xl);
  margin-top: 2em;
  margin-bottom: calc(var(--spacing) * 4);
  line-height: var(--text-2xl--line-height);
}

.prose
  :where(h2 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-weight: var(--font-weight-extrabold);
  color: inherit;
}

.prose :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: var(--font-weight-semibold);
  font-size: var(--text-xl);
  margin-top: calc(var(--spacing) * 6);
  margin-bottom: calc(var(--spacing) * 2);
  line-height: calc(var(--spacing) * 6);
}

.prose
  :where(h3 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-weight: var(--font-weight-bold);
  color: inherit;
}

.prose :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: var(--font-weight-semibold);
  margin-top: calc(var(--spacing) * 6);
  margin-bottom: calc(var(--spacing) * 2);
  line-height: var(--leading-normal);
}

.prose
  :where(h4 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-weight: var(--font-weight-bold);
  color: inherit;
}

.prose :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 8);
}

.prose
  :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  display: block;
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 8);
}

.prose :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 8);
}

.prose :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-weight: var(--font-weight-medium);
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow:
    0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%),
    0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: var(--text-sm);
  border-radius: calc(var(--spacing) * 1);
  padding-top: calc(var(--spacing) * 1);
  padding-inline-end: calc(var(--spacing) * 1);
  padding-bottom: calc(var(--spacing) * 1);
  padding-inline-start: calc(var(--spacing) * 1);
}

.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: var(--font-weight-semibold);
  font-size: var(--text-sm);
}

.prose
  :where(code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::before {
  content: "`";
}

.prose
  :where(code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::after {
  content: "`";
}

.prose
  :where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: inherit;
}

.prose
  :where(h1 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: inherit;
}

.prose
  :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: inherit;
  font-size: var(--text-sm);
}

.prose
  :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: inherit;
  font-size: calc(var(--spacing) * 4);
}

.prose
  :where(h4 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: inherit;
}

.prose
  :where(blockquote code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  color: inherit;
}

.prose
  :where(thead th code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  color: inherit;
}

.prose :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: var(--font-weight-normal);
  font-size: var(--text-sm);
  line-height: var(--text-sm--line-height);
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 7);
  border-radius: var(--radius-md);
  padding-top: calc(var(--spacing) * 4);
  padding-inline-end: calc(var(--spacing) * 4);
  padding-bottom: calc(var(--spacing) * 4);
  padding-inline-start: calc(var(--spacing) * 4);
}

.prose
  :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose
  :where(pre code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::before {
  content: none;
}

.prose
  :where(pre code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::after {
  content: none;
}

.prose :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 8);
  font-size: var(--text-sm);
  line-height: var(--text-sm--line-height);
}

.prose :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.prose
  :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: var(--font-weight-semibold);
  vertical-align: bottom;
  padding-inline-end: calc(var(--spacing) * 2);
  padding-bottom: calc(var(--spacing) * 2);
  padding-inline-start: calc(var(--spacing) * 2);
}

.prose
  :where(tbody tr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.prose
  :where(tbody tr:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  border-bottom-width: 0;
}

.prose
  :where(tbody td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.prose
  :where(tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  vertical-align: top;
}

.prose
  :where(th, td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  text-align: start;
}

.prose
  :where(figure > *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose
  :where(figcaption):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: var(--text-sm);
  line-height: calc(var(--spacing) * 6);
  margin-top: calc(var(--spacing) * 4);
}

.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: var(--text-base);
  line-height: 1.75;
}

.prose
  :where(picture > img):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 2);
  margin-bottom: calc(var(--spacing) * 2);
}

.prose
  :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-inline-start: calc(var(--spacing) * 1);
}

.prose
  :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-inline-start: calc(var(--spacing) * 1);
}

.prose
  :where(.prose > ul > li p):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 3);
  margin-bottom: calc(var(--spacing) * 3);
}

.prose
  :where(.prose > ul > li > p:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 5);
}

.prose
  :where(.prose > ul > li > p:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: calc(var(--spacing) * 5);
}

.prose
  :where(.prose > ol > li > p:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 5);
}

.prose
  :where(.prose > ol > li > p:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: calc(var(--spacing) * 5);
}

.prose
  :where(ul ul, ul ol, ol ul, ol ol):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 3);
  margin-bottom: calc(var(--spacing) * 3);
}

.prose :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 5);
  margin-bottom: calc(var(--spacing) * 5);
}

.prose :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 2);
  padding-inline-start: calc(var(--spacing) * 6.5);
}

.prose
  :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose
  :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose
  :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose
  :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose
  :where(thead th:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-start: 0;
}

.prose
  :where(thead th:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-end: 0;
}

.prose
  :where(tbody td, tfoot td):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-top: calc(var(--spacing) * 2);
  padding-inline-end: calc(var(--spacing) * 2);
  padding-bottom: calc(var(--spacing) * 2);
  padding-inline-start: calc(var(--spacing) * 2);
}

.prose
  :where(tbody td:first-child, tfoot td:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-start: 0;
}

.prose
  :where(tbody td:last-child, tfoot td:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-end: 0;
}

.prose
  :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 8);
}

.prose
  :where(.prose > :first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0;
}

.prose
  :where(.prose > :last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: 0;
}

.prose-sm {
  font-size: var(--text-sm);
  line-height: var(--text-sm--line-height);
}

.prose-sm :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 4);
  margin-bottom: calc(var(--spacing) * 4);
}

.prose-sm
  :where([class~="lead"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  font-size: calc(var(--spacing) * 5);
  line-height: var(--text-lg--line-height);
  margin-top: calc(var(--spacing) * 4);
  margin-bottom: calc(var(--spacing) * 4);
}

.prose-sm
  :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 5);
  margin-bottom: calc(var(--spacing) * 5);
  padding-inline-start: calc(var(--spacing) * 4);
}

.prose-sm :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 8);
  margin-top: 0;
  margin-bottom: calc(var(--spacing) * 3);
  line-height: 1.2;
}

.prose-sm :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 6);
  margin-top: calc(var(--spacing) * 6);
  margin-bottom: calc(var(--spacing) * 3);
  line-height: var(--text-xl--line-height);
}

.prose-sm :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 5);
  margin-top: calc(var(--spacing) * 6);
  margin-bottom: calc(var(--spacing) * 2);
  line-height: var(--text-lg--line-height);
}

.prose-sm :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 6);
  margin-bottom: calc(var(--spacing) * 2);
  line-height: calc(var(--spacing) * 6);
}

.prose-sm
  :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 7);
}

.prose-sm
  :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 7);
}

.prose-sm
  :where(picture > img):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-sm
  :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 7);
}

.prose-sm
  :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
  border-radius: calc(var(--spacing) * 1);
  padding-top: calc(var(--spacing) * 1);
  padding-inline-end: calc(var(--spacing) * 1);
  padding-bottom: calc(var(--spacing) * 1);
  padding-inline-start: calc(var(--spacing) * 1);
}

.prose-sm
  :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
}

.prose-sm
  :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
}

.prose-sm
  :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
}

.prose-sm
  :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
  line-height: calc(var(--spacing) * 7);
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 7);
  border-radius: var(--spacing);
  padding-top: calc(var(--spacing) * 3);
  padding-inline-end: calc(var(--spacing) * 4);
  padding-bottom: calc(var(--spacing) * 3);
  padding-inline-start: calc(var(--spacing) * 4);
}

.prose-sm :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 4);
  margin-bottom: calc(var(--spacing) * 4);
  padding-inline-start: calc(var(--spacing) * 6);
}

.prose-sm :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 4);
  margin-bottom: calc(var(--spacing) * 4);
  padding-inline-start: calc(var(--spacing) * 6);
}

.prose-sm :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 1);
  margin-bottom: calc(var(--spacing) * 1);
}

.prose-sm
  :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-inline-start: calc(var(--spacing) * 2);
}

.prose-sm
  :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-inline-start: calc(var(--spacing) * 2);
}

.prose-sm
  :where(.prose-sm > ul > li p):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 2);
  margin-bottom: calc(var(--spacing) * 2);
}

.prose-sm
  :where(.prose-sm > ul > li > p:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 4);
}

.prose-sm
  :where(.prose-sm > ul > li > p:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: calc(var(--spacing) * 4);
}

.prose-sm
  :where(.prose-sm > ol > li > p:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 4);
}

.prose-sm
  :where(.prose-sm > ol > li > p:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: calc(var(--spacing) * 4);
}

.prose-sm
  :where(ul ul, ul ol, ol ul, ol ol):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 2);
  margin-bottom: calc(var(--spacing) * 2);
}

.prose-sm :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 4);
  margin-bottom: calc(var(--spacing) * 4);
}

.prose-sm :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 4);
}

.prose-sm :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 1);
  padding-inline-start: calc(var(--spacing) * 6);
}

.prose-sm :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 12);
  margin-bottom: calc(var(--spacing) * 12);
}

.prose-sm
  :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-sm
  :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-sm
  :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-sm
  :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-sm
  :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
  line-height: var(--leading-normal);
}

.prose-sm
  :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-inline-end: calc(var(--spacing) * 4);
  padding-bottom: calc(var(--spacing) * 3);
  padding-inline-start: calc(var(--spacing) * 4);
}

.prose-sm
  :where(thead th:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-start: 0;
}

.prose-sm
  :where(thead th:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-end: 0;
}

.prose-sm
  :where(tbody td, tfoot td):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-top: calc(var(--spacing) * 3);
  padding-inline-end: calc(var(--spacing) * 4);
  padding-bottom: calc(var(--spacing) * 3);
  padding-inline-start: calc(var(--spacing) * 4);
}

.prose-sm
  :where(tbody td:first-child, tfoot td:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-start: 0;
}

.prose-sm
  :where(tbody td:last-child, tfoot td:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-end: 0;
}

.prose-sm
  :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 7);
}

.prose-sm
  :where(figure > *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-sm
  :where(figcaption):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
  line-height: var(--text-2xl--line-height);
  margin-top: calc(var(--spacing) * 3);
}

.prose-sm
  :where(.prose-sm > :first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0;
}

.prose-sm
  :where(.prose-sm > :last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: 0;
}

.prose-lg {
  font-size: var(--text-lg);
  line-height: calc(var(--spacing) * 7);
}

.prose-lg :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 5);
  margin-bottom: calc(var(--spacing) * 5);
}

.prose-lg
  :where([class~="lead"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  font-size: calc(var(--spacing) * 5);
  line-height: calc(var(--spacing) * 6);
  margin-top: calc(var(--spacing) * 4);
  margin-bottom: calc(var(--spacing) * 4);
}

.prose-lg
  :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 7);
  padding-inline-start: calc(var(--spacing) * 4);
}

.prose-lg :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 10);
  margin-top: 0;
  margin-bottom: calc(var(--spacing) * 3);
  line-height: 1;
}

.prose-lg :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 7);
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 4);
  line-height: var(--text-2xl--line-height);
}

.prose-lg :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 5);
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 3);
  line-height: var(--leading-normal);
}

.prose-lg :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 2);
  line-height: var(--text-lg--line-height);
}

.prose-lg
  :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 7);
}

.prose-lg
  :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 7);
}

.prose-lg
  :where(picture > img):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-lg
  :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 7);
}

.prose-lg
  :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
  border-radius: calc(var(--spacing) * 1);
  padding-top: calc(var(--spacing) * 1);
  padding-inline-end: calc(var(--spacing) * 2);
  padding-bottom: calc(var(--spacing) * 1);
  padding-inline-start: calc(var(--spacing) * 2);
}

.prose-lg
  :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
}

.prose-lg
  :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
}

.prose-lg
  :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: var(--text-sm);
}

.prose-lg
  :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
  line-height: 1.75;
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 8);
  border-radius: var(--radius-md);
  padding-top: calc(var(--spacing) * 4);
  padding-inline-end: calc(var(--spacing) * 6);
  padding-bottom: calc(var(--spacing) * 4);
  padding-inline-start: calc(var(--spacing) * 6);
}

.prose-lg :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 5);
  margin-bottom: calc(var(--spacing) * 5);
  padding-inline-start: calc(var(--spacing) * 6);
}

.prose-lg :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 5);
  margin-bottom: calc(var(--spacing) * 5);
  padding-inline-start: calc(var(--spacing) * 6);
}

.prose-lg :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 3);
  margin-bottom: calc(var(--spacing) * 3);
}

.prose-lg
  :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-inline-start: calc(var(--spacing) * 2);
}

.prose-lg
  :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-inline-start: calc(var(--spacing) * 2);
}

.prose-lg
  :where(.prose-lg > ul > li p):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 4);
  margin-bottom: calc(var(--spacing) * 4);
}

.prose-lg
  :where(.prose-lg > ul > li > p:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 5);
}

.prose-lg
  :where(.prose-lg > ul > li > p:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: calc(var(--spacing) * 5);
}

.prose-lg
  :where(.prose-lg > ol > li > p:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 5);
}

.prose-lg
  :where(.prose-lg > ol > li > p:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: calc(var(--spacing) * 5);
}

.prose-lg
  :where(ul ul, ul ol, ol ul, ol ol):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 4);
  margin-bottom: calc(var(--spacing) * 4);
}

.prose-lg :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 5);
  margin-bottom: calc(var(--spacing) * 5);
}

.prose-lg :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 5);
}

.prose-lg :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 3);
  padding-inline-start: calc(var(--spacing) * 6);
}

.prose-lg :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 12);
  margin-bottom: calc(var(--spacing) * 12);
}

.prose-lg
  :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-lg
  :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-lg
  :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-lg
  :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-lg
  :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
  line-height: var(--leading-normal);
}

.prose-lg
  :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-inline-end: 0.75em;
  padding-bottom: calc(var(--spacing) * 3);
  padding-inline-start: 0.75em;
}

.prose-lg
  :where(thead th:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-start: 0;
}

.prose-lg
  :where(thead th:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-end: 0;
}

.prose-lg
  :where(tbody td, tfoot td):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-top: calc(var(--spacing) * 3);
  padding-inline-end: 0.75em;
  padding-bottom: calc(var(--spacing) * 3);
  padding-inline-start: 0.75em;
}

.prose-lg
  :where(tbody td:first-child, tfoot td:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-start: 0;
}

.prose-lg
  :where(tbody td:last-child, tfoot td:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-end: 0;
}

.prose-lg
  :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 7);
}

.prose-lg
  :where(figure > *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-lg
  :where(figcaption):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
  line-height: var(--leading-normal);
  margin-top: calc(var(--spacing) * 4);
}

.prose-lg
  :where(.prose-lg > :first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0;
}

.prose-lg
  :where(.prose-lg > :last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: 0;
}

.prose-xl {
  font-size: var(--text-xl);
  line-height: 1.8;
}

.prose-xl :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 4.8);
  margin-bottom: calc(var(--spacing) * 4.8);
}

.prose-xl
  :where([class~="lead"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  font-size: calc(var(--spacing) * 5);
  line-height: var(--leading-normal);
  margin-top: calc(var(--spacing) * 4);
  margin-bottom: calc(var(--spacing) * 4);
}

.prose-xl
  :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 6);
  margin-bottom: calc(var(--spacing) * 6);
  padding-inline-start: 1.0666667em;
}

.prose-xl :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: var(--text-5xl);
  margin-top: 0;
  margin-bottom: calc(var(--spacing) * 4);
  line-height: 1;
}

.prose-xl :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: var(--text-3xl);
  margin-top: calc(var(--spacing) * 6);
  margin-bottom: calc(var(--spacing) * 4);
  line-height: var(--text-4xl--line-height);
}

.prose-xl :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: var(--text-2xl);
  margin-top: calc(var(--spacing) * 6);
  margin-bottom: calc(var(--spacing) * 3);
  line-height: var(--text-2xl--line-height);
}

.prose-xl :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 2);
  line-height: calc(var(--spacing) * 6);
}

.prose-xl
  :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 8);
}

.prose-xl
  :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 8);
}

.prose-xl
  :where(picture > img):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-xl
  :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 8);
}

.prose-xl
  :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
  border-radius: calc(var(--spacing) * 1);
  padding-top: calc(var(--spacing) * 1);
  padding-inline-end: calc(var(--spacing) * 2);
  padding-bottom: calc(var(--spacing) * 1);
  padding-inline-start: calc(var(--spacing) * 2);
}

.prose-xl
  :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
}

.prose-xl
  :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
}

.prose-xl
  :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
}

.prose-xl
  :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
  line-height: calc(var(--spacing) * 7);
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 8);
  border-radius: calc(var(--spacing) * 2);
  padding-top: calc(var(--spacing) * 4);
  padding-inline-end: 1.3333333em;
  padding-bottom: calc(var(--spacing) * 4);
  padding-inline-start: 1.3333333em;
}

.prose-xl :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 4.8);
  margin-bottom: calc(var(--spacing) * 4.8);
  padding-inline-start: calc(var(--spacing) * 6);
}

.prose-xl :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 4.8);
  margin-bottom: calc(var(--spacing) * 4.8);
  padding-inline-start: calc(var(--spacing) * 6);
}

.prose-xl :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 2);
  margin-bottom: calc(var(--spacing) * 2);
}

.prose-xl
  :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-inline-start: calc(var(--spacing) * 2);
}

.prose-xl
  :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-inline-start: calc(var(--spacing) * 2);
}

.prose-xl
  :where(.prose-xl > ul > li p):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 3);
  margin-bottom: calc(var(--spacing) * 3);
}

.prose-xl
  :where(.prose-xl > ul > li > p:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 4.8);
}

.prose-xl
  :where(.prose-xl > ul > li > p:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: calc(var(--spacing) * 4.8);
}

.prose-xl
  :where(.prose-xl > ol > li > p:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 4.8);
}

.prose-xl
  :where(.prose-xl > ol > li > p:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: calc(var(--spacing) * 4.8);
}

.prose-xl
  :where(ul ul, ul ol, ol ul, ol ol):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 3);
  margin-bottom: calc(var(--spacing) * 3);
}

.prose-xl :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 4.8);
  margin-bottom: calc(var(--spacing) * 4.8);
}

.prose-xl :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 4.8);
}

.prose-xl :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 2);
  padding-inline-start: calc(var(--spacing) * 6);
}

.prose-xl :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 12);
  margin-bottom: calc(var(--spacing) * 12);
}

.prose-xl
  :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-xl
  :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-xl
  :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-xl
  :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-xl
  :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
  line-height: var(--text-lg--line-height);
}

.prose-xl
  :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-inline-end: calc(var(--spacing) * 3);
  padding-bottom: calc(var(--spacing) * 4);
  padding-inline-start: calc(var(--spacing) * 3);
}

.prose-xl
  :where(thead th:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-start: 0;
}

.prose-xl
  :where(thead th:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-end: 0;
}

.prose-xl
  :where(tbody td, tfoot td):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-top: calc(var(--spacing) * 4);
  padding-inline-end: calc(var(--spacing) * 3);
  padding-bottom: calc(var(--spacing) * 4);
  padding-inline-start: calc(var(--spacing) * 3);
}

.prose-xl
  :where(tbody td:first-child, tfoot td:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-start: 0;
}

.prose-xl
  :where(tbody td:last-child, tfoot td:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-end: 0;
}

.prose-xl
  :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 8);
}

.prose-xl
  :where(figure > *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-xl
  :where(figcaption):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
  line-height: var(--text-lg--line-height);
  margin-top: calc(var(--spacing) * 4);
}

.prose-xl
  :where(.prose-xl > :first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0;
}

.prose-xl
  :where(.prose-xl > :last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: 0;
}

.prose-2xl {
  font-size: var(--text-2xl);
  line-height: calc(var(--spacing) * 7);
}

.prose-2xl :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 5);
  margin-bottom: calc(var(--spacing) * 5);
}

.prose-2xl
  :where([class~="lead"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  font-size: var(--text-xl);
  line-height: 1.4666667;
  margin-top: 1.0666667em;
  margin-bottom: calc(var(--spacing) * 4);
}

.prose-2xl
  :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 7);
  padding-inline-start: calc(var(--spacing) * 4);
}

.prose-2xl
  :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 10);
  margin-top: 0;
  margin-bottom: calc(var(--spacing) * 4);
  line-height: 1;
}

.prose-2xl
  :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: var(--text-2xl);
  margin-top: calc(var(--spacing) * 6);
  margin-bottom: calc(var(--spacing) * 3);
  line-height: 1.0833333;
}

.prose-2xl
  :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: var(--text-2xl);
  margin-top: calc(var(--spacing) * 6);
  margin-bottom: calc(var(--spacing) * 3);
  line-height: var(--text-3xl--line-height);
}

.prose-2xl
  :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 7);
  margin-bottom: calc(var(--spacing) * 3);
  line-height: var(--leading-normal);
}

.prose-2xl
  :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 8);
}

.prose-2xl
  :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 8);
}

.prose-2xl
  :where(picture > img):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-2xl
  :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 8);
}

.prose-2xl
  :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 3);
  border-radius: var(--radius-md);
  padding-top: calc(var(--spacing) * 1);
  padding-inline-end: calc(var(--spacing) * 1);
  padding-bottom: calc(var(--spacing) * 1);
  padding-inline-start: calc(var(--spacing) * 1);
}

.prose-2xl
  :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 3);
}

.prose-2xl
  :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: var(--text-sm);
}

.prose-2xl
  :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 4);
}

.prose-2xl
  :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 3);
  line-height: 1.8;
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 8);
  border-radius: calc(var(--spacing) * 2);
  padding-top: calc(var(--spacing) * 5);
  padding-inline-end: calc(var(--spacing) * 6);
  padding-bottom: calc(var(--spacing) * 5);
  padding-inline-start: calc(var(--spacing) * 6);
}

.prose-2xl
  :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 5);
  margin-bottom: calc(var(--spacing) * 5);
  padding-inline-start: calc(var(--spacing) * 6);
}

.prose-2xl
  :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 5);
  margin-bottom: calc(var(--spacing) * 5);
  padding-inline-start: calc(var(--spacing) * 6);
}

.prose-2xl
  :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 2);
  margin-bottom: calc(var(--spacing) * 2);
}

.prose-2xl
  :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-inline-start: calc(var(--spacing) * 2);
}

.prose-2xl
  :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-inline-start: calc(var(--spacing) * 2);
}

.prose-2xl
  :where(.prose-2xl > ul > li p):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 3);
  margin-bottom: calc(var(--spacing) * 3);
}

.prose-2xl
  :where(.prose-2xl > ul > li > p:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 5);
}

.prose-2xl
  :where(.prose-2xl > ul > li > p:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: calc(var(--spacing) * 5);
}

.prose-2xl
  :where(.prose-2xl > ol > li > p:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 5);
}

.prose-2xl
  :where(.prose-2xl > ol > li > p:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: calc(var(--spacing) * 5);
}

.prose-2xl
  :where(ul ul, ul ol, ol ul, ol ol):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: calc(var(--spacing) * 3);
  margin-bottom: calc(var(--spacing) * 3);
}

.prose-2xl
  :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 5);
  margin-bottom: calc(var(--spacing) * 5);
}

.prose-2xl
  :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 5);
}

.prose-2xl
  :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 2);
  padding-inline-start: calc(var(--spacing) * 6);
}

.prose-2xl
  :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 12);
  margin-bottom: calc(var(--spacing) * 12);
}

.prose-2xl
  :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-2xl
  :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-2xl
  :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-2xl
  :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-2xl
  :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 3);
  line-height: var(--text-xl--line-height);
}

.prose-2xl
  :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-inline-end: calc(var(--spacing) * 2);
  padding-bottom: calc(var(--spacing) * 3);
  padding-inline-start: calc(var(--spacing) * 2);
}

.prose-2xl
  :where(thead th:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-start: 0;
}

.prose-2xl
  :where(thead th:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-end: 0;
}

.prose-2xl
  :where(tbody td, tfoot td):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-top: calc(var(--spacing) * 3);
  padding-inline-end: calc(var(--spacing) * 2);
  padding-bottom: calc(var(--spacing) * 3);
  padding-inline-start: calc(var(--spacing) * 2);
}

.prose-2xl
  :where(tbody td:first-child, tfoot td:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-start: 0;
}

.prose-2xl
  :where(tbody td:last-child, tfoot td:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-inline-end: 0;
}

.prose-2xl
  :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 8);
}

.prose-2xl
  :where(figure > *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-2xl
  :where(figcaption):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: calc(var(--spacing) * 3);
  line-height: calc(var(--spacing) * 6);
  margin-top: calc(var(--spacing) * 4);
}

.prose-2xl
  :where(.prose-2xl > :first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0;
}

.prose-2xl
  :where(.prose-2xl > :last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: 0;
}
