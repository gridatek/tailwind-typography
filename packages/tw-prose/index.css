/* ===================================================================
   TW-PROSE - CSS-only Typography for Tailwind CSS v4
   Compatible with @utility directives and Tailwind v4 variables
   =================================================================== */

/* Base prose utility with comprehensive typography styling */
@utility prose {
  /* CSS Custom Properties for theming */
  --tw-prose-body: var(--color-gray-700);
  --tw-prose-headings: var(--color-gray-900);
  --tw-prose-lead: var(--color-gray-600);
  --tw-prose-links: var(--color-gray-900);
  --tw-prose-bold: var(--color-gray-900);
  --tw-prose-counters: var(--color-gray-500);
  --tw-prose-bullets: var(--color-gray-400);
  --tw-prose-hr: var(--color-gray-300);
  --tw-prose-quotes: var(--color-gray-900);
  --tw-prose-quote-borders: var(--color-gray-300);
  --tw-prose-captions: var(--color-gray-500);
  --tw-prose-kbd: var(--color-gray-900);
  --tw-prose-kbd-shadows: var(--color-gray-200);
  --tw-prose-code: var(--color-gray-900);
  --tw-prose-pre-code: var(--color-gray-200);
  --tw-prose-pre-bg: var(--color-gray-800);
  --tw-prose-th-borders: var(--color-gray-300);
  --tw-prose-td-borders: var(--color-gray-200);

  /* Dark theme variables (invert) */
  --tw-prose-invert-body: var(--color-gray-300);
  --tw-prose-invert-headings: var(--color-gray-50);
  --tw-prose-invert-lead: var(--color-gray-400);
  --tw-prose-invert-links: var(--color-gray-50);
  --tw-prose-invert-bold: var(--color-gray-50);
  --tw-prose-invert-counters: var(--color-gray-400);
  --tw-prose-invert-bullets: var(--color-gray-600);
  --tw-prose-invert-hr: var(--color-gray-700);
  --tw-prose-invert-quotes: var(--color-gray-100);
  --tw-prose-invert-quote-borders: var(--color-gray-700);
  --tw-prose-invert-captions: var(--color-gray-400);
  --tw-prose-invert-kbd: var(--color-gray-50);
  --tw-prose-invert-kbd-shadows: var(--color-gray-600);
  --tw-prose-invert-code: var(--color-gray-50);
  --tw-prose-invert-pre-code: var(--color-gray-300);
  --tw-prose-invert-pre-bg: rgba(0, 0, 0, 0.5);
  --tw-prose-invert-th-borders: var(--color-gray-600);
  --tw-prose-invert-td-borders: var(--color-gray-700);

  /* Base typography styles */
  color: var(--tw-prose-body);
  max-width: 65ch;
  font-size: var(--text-base);
  line-height: var(--text-base--line-height);

  /* Paragraphs */
  & :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 5);
    margin-bottom: calc(var(--spacing) * 5);
  }

  /* Lead paragraph */
  &
    :where([class~="lead"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: var(--tw-prose-lead);
    font-size: var(--text-xl);
    line-height: var(--text-xl--line-height);
    margin-top: calc(var(--spacing) * 6);
    margin-bottom: calc(var(--spacing) * 6);
  }

  /* Headings */
  & :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: var(--font-weight-extrabold);
    font-size: var(--text-4xl);
    margin-top: 0;
    margin-bottom: calc(var(--spacing) * 4);
    line-height: var(--text-4xl--line-height);
  }

  & :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: var(--font-weight-bold);
    font-size: var(--text-2xl);
    margin-top: calc(var(--spacing) * 8);
    margin-bottom: calc(var(--spacing) * 4);
    line-height: var(--text-2xl--line-height);
  }

  & :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: var(--font-weight-semibold);
    font-size: var(--text-xl);
    margin-top: calc(var(--spacing) * 6);
    margin-bottom: calc(var(--spacing) * 2);
    line-height: var(--text-xl--line-height);
  }

  & :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: var(--font-weight-semibold);
    margin-top: calc(var(--spacing) * 6);
    margin-bottom: calc(var(--spacing) * 2);
    line-height: calc(var(--spacing) * 6);
  }

  /* Links */
  & :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-links);
    text-decoration: underline;
    font-weight: var(--font-weight-medium);
  }

  /* Strong/Bold */
  & :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-bold);
    font-weight: var(--font-weight-semibold);
  }

  & :where(a strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  &
    :where(blockquote strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
  }

  &
    :where(thead th strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
  }

  /* Emphasis */
  & :where(em):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-style: italic;
  }

  /* Inline Code */
  & :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-code);
    font-weight: var(--font-weight-semibold);
    font-size: var(--text-sm);
  }

  &
    :where(code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::before {
    content: "`";
  }

  &
    :where(code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::after {
    content: "`";
  }

  & :where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  & :where(h1 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  & :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: var(--text-base);
  }

  & :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: var(--text-base);
  }

  & :where(h4 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  &
    :where(blockquote code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
  }

  &
    :where(thead th code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
  }

  /* Code blocks */
  & :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    overflow-x: auto;
    font-weight: var(--font-weight-normal);
    font-size: var(--text-sm);
    line-height: calc(var(--spacing) * 6);
    margin-top: calc(var(--spacing) * 7);
    margin-bottom: calc(var(--spacing) * 7);
    border-radius: calc(var(--spacing) * 2);
    padding-top: calc(var(--spacing) * 3);
    padding-inline-end: calc(var(--spacing) * 4);
    padding-bottom: calc(var(--spacing) * 3);
    padding-inline-start: calc(var(--spacing) * 4);
  }

  & :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }

  &
    :where(pre code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::before {
    content: none;
  }

  &
    :where(pre code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::after {
    content: none;
  }

  /* Lists */
  & :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: decimal;
    margin-top: calc(var(--spacing) * 5);
    margin-bottom: calc(var(--spacing) * 5);
    padding-inline-start: calc(var(--spacing) * 6.5);
  }

  &
    :where(ol[type="A"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-alpha;
  }

  &
    :where(ol[type="a"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-alpha;
  }

  &
    :where(ol[type="A" s]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-alpha;
  }

  &
    :where(ol[type="a" s]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-alpha;
  }

  &
    :where(ol[type="I"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-roman;
  }

  &
    :where(ol[type="i"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-roman;
  }

  &
    :where(ol[type="I" s]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-roman;
  }

  &
    :where(ol[type="i" s]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-roman;
  }

  &
    :where(ol[type="1"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: decimal;
  }

  & :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: disc;
    margin-top: calc(var(--spacing) * 5);
    margin-bottom: calc(var(--spacing) * 5);
    padding-inline-start: calc(var(--spacing) * 6.5);
  }

  &
    :where(ol > li::marker):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-weight: var(--font-weight-normal);
    color: var(--tw-prose-counters);
  }

  &
    :where(ul > li::marker):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: var(--tw-prose-bullets);
  }

  & :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 2);
    margin-bottom: calc(var(--spacing) * 2);
  }

  & :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: calc(var(--spacing) * 1.5);
  }

  & :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: calc(var(--spacing) * 1.5);
  }

  &
    :where(.prose > ul > li p):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: calc(var(--spacing) * 3);
    margin-bottom: calc(var(--spacing) * 3);
  }

  &
    :where(.prose > ul > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: calc(var(--spacing) * 5);
  }

  &
    :where(.prose > ul > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: calc(var(--spacing) * 5);
  }

  &
    :where(.prose > ol > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: calc(var(--spacing) * 5);
  }

  &
    :where(.prose > ol > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: calc(var(--spacing) * 5);
  }

  &
    :where(ul ul, ul ol, ol ul, ol ol):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: calc(var(--spacing) * 3);
    margin-bottom: calc(var(--spacing) * 3);
  }

  /* Blockquotes */
  &
    :where(blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-weight: var(--font-weight-medium);
    font-style: italic;
    color: var(--tw-prose-quotes);
    border-inline-start-width: var(--spacing);
    border-inline-start-color: var(--tw-prose-quote-borders);
    quotes: "\201C" "\201D" "\2018" "\2019";
    margin-top: calc(var(--spacing) * 6);
    margin-bottom: calc(var(--spacing) * 6);
    padding-inline-start: calc(var(--spacing) * 4);
  }

  &
    :where(blockquote p:first-of-type):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::before {
    content: open-quote;
  }

  &
    :where(blockquote p:last-of-type):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::after {
    content: close-quote;
  }

  /* Definition lists */
  & :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 5);
    margin-bottom: calc(var(--spacing) * 5);
  }

  & :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: var(--font-weight-semibold);
    margin-top: calc(var(--spacing) * 5);
  }

  & :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 2);
    padding-inline-start: calc(var(--spacing) * 6);
  }

  /* Horizontal rules */
  & :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: calc(var(--spacing) * 12);
    margin-bottom: calc(var(--spacing) * 12);
  }

  /* Images and figures */
  & :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 8);
    margin-bottom: calc(var(--spacing) * 8);
  }

  & :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 8);
    margin-bottom: calc(var(--spacing) * 8);
  }

  & :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 8);
    margin-bottom: calc(var(--spacing) * 8);
  }

  &
    :where(figure > *):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }

  &
    :where(figcaption):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: var(--tw-prose-captions);
    font-size: var(--text-sm);
    line-height: calc(var(--spacing) * 5);
    margin-top: calc(var(--spacing) * 3);
  }

  /* Tables */
  & :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    width: 100%;
    table-layout: auto;
    text-align: start;
    margin-top: calc(var(--spacing) * 8);
    margin-bottom: calc(var(--spacing) * 8);
    font-size: var(--text-sm);
    line-height: calc(var(--spacing) * 6);
  }

  & :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders);
  }

  & :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: var(--font-weight-semibold);
    vertical-align: bottom;
    padding-inline-end: calc(var(--spacing) * 2);
    padding-bottom: calc(var(--spacing) * 2);
    padding-inline-start: calc(var(--spacing) * 2);
  }

  &
    :where(thead th:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }

  &
    :where(thead th:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }

  & :where(tbody tr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
  }

  &
    :where(tbody tr:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    border-bottom-width: 0;
  }

  & :where(tbody td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    vertical-align: baseline;
    padding-top: calc(var(--spacing) * 2);
    padding-inline-end: calc(var(--spacing) * 2);
    padding-bottom: calc(var(--spacing) * 2);
    padding-inline-start: calc(var(--spacing) * 2);
  }

  &
    :where(tbody td:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }

  &
    :where(tbody td:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }

  & :where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders);
  }

  & :where(tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    vertical-align: top;
    padding-top: calc(var(--spacing) * 2);
    padding-inline-end: calc(var(--spacing) * 2);
    padding-bottom: calc(var(--spacing) * 2);
    padding-inline-start: calc(var(--spacing) * 2);
  }

  &
    :where(tfoot td:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }

  &
    :where(tfoot td:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }

  /* Small text */
  & :where(small):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-sm);
  }

  /* Sub and superscript */
  & :where(sub):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-xs);
    vertical-align: sub;
  }

  & :where(sup):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-xs);
    vertical-align: super;
  }

  /* Utility selectors */
  & :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  & :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  & :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  & :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  /* First and last child utilities */
  & > :first-child {
    margin-top: 0;
  }

  & > :last-child {
    margin-bottom: 0;
  }
}

/* Size variants using proper Tailwind v4 variables */
@utility prose-sm {
  font-size: var(--text-sm);
  line-height: var(--text-sm--line-height);

  & :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 4);
    margin-bottom: calc(var(--spacing) * 4);
  }

  &
    :where([class~="lead"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-size: var(--text-lg);
    line-height: var(--text-lg--line-height);
    margin-top: calc(var(--spacing) * 4);
    margin-bottom: calc(var(--spacing) * 4);
  }

  &
    :where(blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: calc(var(--spacing) * 5);
    margin-bottom: calc(var(--spacing) * 5);
    padding-inline-start: calc(var(--spacing) * 4);
  }

  & :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-3xl);
    margin-top: 0;
    margin-bottom: calc(var(--spacing) * 3);
    line-height: var(--text-3xl--line-height);
  }

  & :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-xl);
    margin-top: calc(var(--spacing) * 6);
    margin-bottom: calc(var(--spacing) * 3);
    line-height: var(--text-xl--line-height);
  }

  & :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-lg);
    margin-top: calc(var(--spacing) * 6);
    margin-bottom: calc(var(--spacing) * 2);
    line-height: var(--text-lg--line-height);
  }

  & :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 6);
    margin-bottom: calc(var(--spacing) * 2);
    line-height: calc(var(--spacing) * 6);
  }
}

@utility prose-lg {
  font-size: var(--text-lg);
  line-height: var(--text-lg--line-height);

  & :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 5);
    margin-bottom: calc(var(--spacing) * 5);
  }

  &
    :where([class~="lead"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-size: var(--text-2xl);
    line-height: var(--text-2xl--line-height);
    margin-top: calc(var(--spacing) * 6);
    margin-bottom: calc(var(--spacing) * 6);
  }

  &
    :where(blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: calc(var(--spacing) * 7);
    margin-bottom: calc(var(--spacing) * 7);
    padding-inline-start: calc(var(--spacing) * 4);
  }

  & :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-5xl);
    margin-top: 0;
    margin-bottom: calc(var(--spacing) * 3);
    line-height: var(--text-5xl--line-height);
  }

  & :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-3xl);
    margin-top: calc(var(--spacing) * 7);
    margin-bottom: calc(var(--spacing) * 4);
    line-height: var(--text-3xl--line-height);
  }

  & :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-xl);
    margin-top: calc(var(--spacing) * 7);
    margin-bottom: calc(var(--spacing) * 3);
    line-height: var(--text-xl--line-height);
  }

  & :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 7);
    margin-bottom: calc(var(--spacing) * 2);
    line-height: var(--text-lg--line-height);
  }
}

@utility prose-xl {
  font-size: var(--text-xl);
  line-height: var(--text-xl--line-height);

  & :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 5);
    margin-bottom: calc(var(--spacing) * 5);
  }

  &
    :where([class~="lead"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-size: var(--text-2xl);
    line-height: var(--text-2xl--line-height);
    margin-top: calc(var(--spacing) * 6);
    margin-bottom: calc(var(--spacing) * 6);
  }

  &
    :where(blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: calc(var(--spacing) * 6);
    margin-bottom: calc(var(--spacing) * 6);
    padding-inline-start: calc(var(--spacing) * 4);
  }

  & :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-5xl);
    margin-top: 0;
    margin-bottom: calc(var(--spacing) * 4);
    line-height: var(--text-5xl--line-height);
  }

  & :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-3xl);
    margin-top: calc(var(--spacing) * 6);
    margin-bottom: calc(var(--spacing) * 4);
    line-height: var(--text-3xl--line-height);
  }

  & :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-2xl);
    margin-top: calc(var(--spacing) * 6);
    margin-bottom: calc(var(--spacing) * 3);
    line-height: var(--text-2xl--line-height);
  }

  & :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 7);
    margin-bottom: calc(var(--spacing) * 2);
    line-height: calc(var(--spacing) * 6);
  }
}

@utility prose-2xl {
  font-size: var(--text-2xl);
  line-height: var(--text-2xl--line-height);

  & :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 5);
    margin-bottom: calc(var(--spacing) * 5);
  }

  &
    :where([class~="lead"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-size: var(--text-3xl);
    line-height: var(--text-3xl--line-height);
    margin-top: calc(var(--spacing) * 6);
    margin-bottom: calc(var(--spacing) * 6);
  }

  &
    :where(blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: calc(var(--spacing) * 7);
    margin-bottom: calc(var(--spacing) * 7);
    padding-inline-start: calc(var(--spacing) * 4);
  }

  & :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-6xl);
    margin-top: 0;
    margin-bottom: calc(var(--spacing) * 4);
    line-height: var(--text-6xl--line-height);
  }

  & :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-4xl);
    margin-top: calc(var(--spacing) * 6);
    margin-bottom: calc(var(--spacing) * 3);
    line-height: var(--text-4xl--line-height);
  }

  & :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-3xl);
    margin-top: calc(var(--spacing) * 6);
    margin-bottom: calc(var(--spacing) * 3);
    line-height: var(--text-3xl--line-height);
  }

  & :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 7);
    margin-bottom: calc(var(--spacing) * 3);
    line-height: calc(var(--spacing) * 7);
  }
}

/* Invert (for dark mode) */
@utility prose-invert {
  --tw-prose-body: var(--tw-prose-invert-body);
  --tw-prose-headings: var(--tw-prose-invert-headings);
  --tw-prose-lead: var(--tw-prose-invert-lead);
  --tw-prose-links: var(--tw-prose-invert-links);
  --tw-prose-bold: var(--tw-prose-invert-bold);
  --tw-prose-counters: var(--tw-prose-invert-counters);
  --tw-prose-bullets: var(--tw-prose-invert-bullets);
  --tw-prose-hr: var(--tw-prose-invert-hr);
  --tw-prose-quotes: var(--tw-prose-invert-quotes);
  --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
  --tw-prose-captions: var(--tw-prose-invert-captions);
  --tw-prose-kbd: var(--tw-prose-invert-kbd);
  --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
  --tw-prose-code: var(--tw-prose-invert-code);
  --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
  --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
  --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
  --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
}
